version: '3.8'

services:
  # MongoDB service
  mongo:
    build:
      context: ./mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=job_listings
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  # MySQL service
  mysql:
    build:
      context: ./mysql
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=job_listings
      - MYSQL_USER=honey
      - MYSQL_PASSWORD=12345
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  # Backend service
  backend:
    build:
      context: ./backend
    restart: unless-stopped
    environment:
      - DOCKER_ENV=true
      - DATABASE_URI=mysql://honey:12345@mysql/job_listings
      - MONGO_URI=mongodb://mongo:27017/job_listings
      - SCRAPER_TEST_INTERVAL=15
    ports:
      - "5000:5000"
    depends_on:
      - mongo
      - mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health/databases"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Frontend service
  frontend:
    build:
      context: ./frontend
      args:
        - NEXT_PUBLIC_API_URL=http://localhost:5000/api
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
  mysql-data: